- name: Install from external repositories
  become: true
  become_user: root
  become_method: sudo
  block:
    - name: Get apt key
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
      with_items:
      - { url: "https://packages.microsoft.com/keys/microsoft.asc", dest: "{{ keyrings_dir }}/microsoft.asc" }
      - { url: "https://pkgs.k8s.io/core:/stable:/v{{ kubectl_version }}/deb/Release.key", dest: "{{ keyrings_dir }}/kubernetes.asc" }
      - { url: "https://download.docker.com/linux/ubuntu/gpg", dest: "{{ keyrings_dir }}/docker.asc" }
      - { url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg", dest: "{{ keyrings_dir }}/cloud.google.asc" }
      - { url: "https://packages.openvpn.net/packages-repo.gpg", dest: "{{ keyrings_dir }}/openvpn.asc" }
      - { url: "https://apt.releases.hashicorp.com/gpg", dest: "{{ keyrings_dir }}/hashicorp.asc" }
      - { url: "https://baltocdn.com/helm/signing.asc", dest: "{{ keyrings_dir }}/helm.asc" }

    - name: Install repo
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        state: present
      with_items:
        - deb [arch=amd64,arm64,armhf signed-by={{ keyrings_dir }}/microsoft.asc] https://packages.microsoft.com/repos/code stable main
        - deb [arch=amd64,arm64,armhf signed-by={{ keyrings_dir }}/kubernetes.asc] https://pkgs.k8s.io/core:/stable:/v{{ kubectl_version }}/deb/ /
        - deb [arch=amd64 signed-by={{ keyrings_dir }}/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        - deb [signed-by={{ keyrings_dir }}/cloud.google.asc] https://packages.cloud.google.com/apt cloud-sdk main
        - deb [signed-by={{ keyrings_dir }}/openvpn.asc] https://packages.openvpn.net/openvpn3/debian {{ ansible_distribution_release }} main
        - deb [signed-by={{ keyrings_dir }}/hashicorp.asc] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
        - deb [arch=amd64 signed-by={{ keyrings_dir }}/helm.asc] https://baltocdn.com/helm/stable/debian/ all main

    - name: Install packages
      apt:
        name:
          - code
          - containerd.io
          - docker-ce
          - docker-ce-cli
          - docker-buildx-plugin
          - docker-compose-plugin
          - google-cloud-cli
          - google-cloud-sdk-gke-gcloud-auth-plugin
          - helm
          - kubectl
          - openvpn3
          - terraform
          - vault
        state: latest
        update_cache: true

- name: Install tools from GitHub releases
  become: true
  become_user: root
  become_method: sudo
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    owner: "{{ local_user }}"
    group: "{{ local_user }}"
    mode: '755'
  with_items:
     - { url: "https://github.com/danielfoehrKn/kubeswitch/releases/download/{{ kubeswitch_version }}/switcher_linux_amd64", dest: "/usr/local/bin/switcher" }
     - { url: "https://github.com/getsops/sops/releases/download/v{{ sops_version }}/sops-v{{ sops_version }}.linux.amd64", dest: "/usr/local/bin/sops" }
     - { url: "https://github.com/mikefarah/yq/releases/download/v{{ yq_version }}/yq_linux_amd64", dest: "/usr/local/bin/yq" }
     - { url: "https://github.com/jsonnet-bundler/jsonnet-bundler/releases/download/v{{ jb_version }}/jb-linux-amd64", dest: "/usr/local/bin/jb" }
     - { url: "https://github.com/argoproj/argo-cd/releases/download/v{{ argocd_version }}/argocd-linux-amd64", dest: "/usr/local/bin/argocd" }

- name: Install tools from GitHub releases but it's tarballs
  become: true
  become_user: root
  become_method: sudo
  ansible.builtin.unarchive:
    src: "{{ item.url }}"
    dest: "{{ item.dest }}"
    owner: "{{ local_user }}"
    group: "{{ local_user }}"
    mode: '755'
    remote_src: yes
  with_items:
     - { url: "https://github.com/junegunn/fzf/releases/download/v{{ fzf_version }}/fzf-{{ fzf_version }}-linux_amd64.tar.gz", dest: "/usr/local/bin/" }
     - { url: "https://github.com/splunk/qbec/releases/download/v{{ qbec_version }}/qbec-linux-amd64.tar.gz", dest: "/usr/local/bin/" }

- name: Install tools from .deb packages
  become: true
  become_user: root
  become_method: sudo
  ansible.builtin.apt:
    deb: "{{ item }}"
  with_items:
    - https://github.com/derailed/k9s/releases/download/v{{ k9s_version }}/k9s_linux_amd64.deb

- name: Create additional directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ local_user }}"
    group: "{{ local_user }}"
    state: directory
    mode: '0755'
  with_items:
    - "{{ home_dir }}/.terraform.d/plugin-cache"

- name: Include Helm specific tasks
  include_tasks: helm.yml

- name: Include docker specific tasks
  include_tasks: docker.yml